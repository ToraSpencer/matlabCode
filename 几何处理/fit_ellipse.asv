% 最小二乘法拟合椭圆
% Input: x0,y0 are lists of coordinates [x0, y0]是所有样本点；
function x = fit_ellipse(x0, y0,type)
    if nargin == 2
        type = 'general';
    end
    
    switch type
        case 'general'  % 一般椭圆方程a*x^2 + b*x*y + c*y^2+d*x+e*y+f = 0;
            % x = [a*x^2 + b*x*y + c,d, e, f]
            A = [ x0.*x0, x0.*y0, y0.*y0, x0, y0, ones(size(x0)) ];
            
            % Build scatter matrix
            S = A'*A;
            
            % Build 6x6 constraint matrix
            C(6,6) = 0; 
            C(1,3) = 2; 
            C(2,2) = -1; 
            C(3,1) = 2;
            
            % Solve eigensystem
            [gevec, geval] = eig(inv(S)*C);
            
            % Find the positive eigenvalue
            [PosR, PosC] = find(geval > 0 & ~isinf(geval));
            
            % Extract eigenvector corresponding to positive eigenvalue
            x = gevec(:,PosC);
            
        case 'standard'
            A = [ x0.*x0, y0.*y0, x0, y0, ones(size(x0)) ];
            S = A'*A;
            C(5,5) = 0; 
            C(1,2) = 2; 
            C(2,1) = 2;
            [gevec, geval] = eig(inv(S)*C);
            [PosR, PosC] = find(geval > 0 & ~isinf(geval));
            x = gevec(:,PosC);
            
        otherwise
            error('type error!');
    end
end
